'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var core$1 = require('@angular/core');
var core = require('@ionic-native/core');

var ɵngcc0 = require('@angular/core');
var SplashScreen = /** @class */ (function (_super) {
    tslib.__extends(SplashScreen, _super);
    function SplashScreen() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SplashScreen.prototype.show = function () { return core.cordova(this, "show", { "sync": true }, arguments); };
    SplashScreen.prototype.hide = function () { return core.cordova(this, "hide", { "sync": true }, arguments); };
    SplashScreen.pluginName = "SplashScreen";
    SplashScreen.plugin = "cordova-plugin-splashscreen";
    SplashScreen.pluginRef = "navigator.splashscreen";
    SplashScreen.repo = "https://github.com/apache/cordova-plugin-splashscreen";
    SplashScreen.platforms = ["Amazon Fire OS", "Android", "iOS", "Windows"];
SplashScreen.ɵfac = function SplashScreen_Factory(t) { return ɵSplashScreen_BaseFactory(t || SplashScreen); };
SplashScreen.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SplashScreen, factory: function (t) { return SplashScreen.ɵfac(t); } });
var ɵSplashScreen_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(SplashScreen);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SplashScreen, [{
        type: core$1.Injectable
    }], null, null); })();
    return SplashScreen;
}(core.IonicNativePlugin));

exports.SplashScreen = SplashScreen;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJidW5kbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OzswQkFHTTtBQUNOO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG52YXIgdHNsaWIgPSByZXF1aXJlKCd0c2xpYicpO1xudmFyIGNvcmUkMSA9IHJlcXVpcmUoJ0Bhbmd1bGFyL2NvcmUnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnQGlvbmljLW5hdGl2ZS9jb3JlJyk7XG5cbnZhciBTcGxhc2hTY3JlZW4gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgdHNsaWIuX19leHRlbmRzKFNwbGFzaFNjcmVlbiwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTcGxhc2hTY3JlZW4oKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgU3BsYXNoU2NyZWVuLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic2hvd1wiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU3BsYXNoU2NyZWVuLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwiaGlkZVwiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU3BsYXNoU2NyZWVuLnBsdWdpbk5hbWUgPSBcIlNwbGFzaFNjcmVlblwiO1xuICAgIFNwbGFzaFNjcmVlbi5wbHVnaW4gPSBcImNvcmRvdmEtcGx1Z2luLXNwbGFzaHNjcmVlblwiO1xuICAgIFNwbGFzaFNjcmVlbi5wbHVnaW5SZWYgPSBcIm5hdmlnYXRvci5zcGxhc2hzY3JlZW5cIjtcbiAgICBTcGxhc2hTY3JlZW4ucmVwbyA9IFwiaHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9jb3Jkb3ZhLXBsdWdpbi1zcGxhc2hzY3JlZW5cIjtcbiAgICBTcGxhc2hTY3JlZW4ucGxhdGZvcm1zID0gW1wiQW1hem9uIEZpcmUgT1NcIiwgXCJBbmRyb2lkXCIsIFwiaU9TXCIsIFwiV2luZG93c1wiXTtcbiAgICBTcGxhc2hTY3JlZW4uZGVjb3JhdG9ycyA9IFtcbiAgICAgICAgeyB0eXBlOiBjb3JlJDEuSW5qZWN0YWJsZSB9XG4gICAgXTtcbiAgICByZXR1cm4gU3BsYXNoU2NyZWVuO1xufShjb3JlLklvbmljTmF0aXZlUGx1Z2luKSk7XG5cbmV4cG9ydHMuU3BsYXNoU2NyZWVuID0gU3BsYXNoU2NyZWVuO1xuIl19