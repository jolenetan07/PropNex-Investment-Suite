'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var core$1 = require('@angular/core');
var core = require('@ionic-native/core');

var ɵngcc0 = require('@angular/core');
var SplashScreen = /** @class */ (function (_super) {
    tslib.__extends(SplashScreen, _super);
    function SplashScreen() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SplashScreen.prototype.show = function () { return core.cordova(this, "show", { "sync": true }, arguments); };
    SplashScreen.prototype.hide = function () { return core.cordova(this, "hide", { "sync": true }, arguments); };
    SplashScreen.pluginName = "SplashScreen";
    SplashScreen.plugin = "cordova-plugin-splashscreen";
    SplashScreen.pluginRef = "navigator.splashscreen";
    SplashScreen.repo = "https://github.com/apache/cordova-plugin-splashscreen";
    SplashScreen.platforms = ["Amazon Fire OS", "Android", "iOS", "Windows"];
SplashScreen.ɵfac = function SplashScreen_Factory(t) { return ɵSplashScreen_BaseFactory(t || SplashScreen); };
SplashScreen.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SplashScreen, factory: function (t) { return SplashScreen.ɵfac(t); } });
var ɵSplashScreen_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(SplashScreen);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SplashScreen, [{
        type: core$1.Injectable
    }], null, null); })();
    return SplashScreen;
}(core.IonicNativePlugin));

exports.SplashScreen = SplashScreen;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJidW5kbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OzswQkFHTTtBQUNOO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuXHJcbnZhciB0c2xpYiA9IHJlcXVpcmUoJ3RzbGliJyk7XHJcbnZhciBjb3JlJDEgPSByZXF1aXJlKCdAYW5ndWxhci9jb3JlJyk7XHJcbnZhciBjb3JlID0gcmVxdWlyZSgnQGlvbmljLW5hdGl2ZS9jb3JlJyk7XHJcblxyXG52YXIgU3BsYXNoU2NyZWVuID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xyXG4gICAgdHNsaWIuX19leHRlbmRzKFNwbGFzaFNjcmVlbiwgX3N1cGVyKTtcclxuICAgIGZ1bmN0aW9uIFNwbGFzaFNjcmVlbigpIHtcclxuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XHJcbiAgICB9XHJcbiAgICBTcGxhc2hTY3JlZW4ucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJzaG93XCIsIHsgXCJzeW5jXCI6IHRydWUgfSwgYXJndW1lbnRzKTsgfTtcclxuICAgIFNwbGFzaFNjcmVlbi5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcImhpZGVcIiwgeyBcInN5bmNcIjogdHJ1ZSB9LCBhcmd1bWVudHMpOyB9O1xyXG4gICAgU3BsYXNoU2NyZWVuLnBsdWdpbk5hbWUgPSBcIlNwbGFzaFNjcmVlblwiO1xyXG4gICAgU3BsYXNoU2NyZWVuLnBsdWdpbiA9IFwiY29yZG92YS1wbHVnaW4tc3BsYXNoc2NyZWVuXCI7XHJcbiAgICBTcGxhc2hTY3JlZW4ucGx1Z2luUmVmID0gXCJuYXZpZ2F0b3Iuc3BsYXNoc2NyZWVuXCI7XHJcbiAgICBTcGxhc2hTY3JlZW4ucmVwbyA9IFwiaHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9jb3Jkb3ZhLXBsdWdpbi1zcGxhc2hzY3JlZW5cIjtcclxuICAgIFNwbGFzaFNjcmVlbi5wbGF0Zm9ybXMgPSBbXCJBbWF6b24gRmlyZSBPU1wiLCBcIkFuZHJvaWRcIiwgXCJpT1NcIiwgXCJXaW5kb3dzXCJdO1xyXG4gICAgU3BsYXNoU2NyZWVuLmRlY29yYXRvcnMgPSBbXHJcbiAgICAgICAgeyB0eXBlOiBjb3JlJDEuSW5qZWN0YWJsZSB9XHJcbiAgICBdO1xyXG4gICAgcmV0dXJuIFNwbGFzaFNjcmVlbjtcclxufShjb3JlLklvbmljTmF0aXZlUGx1Z2luKSk7XHJcblxyXG5leHBvcnRzLlNwbGFzaFNjcmVlbiA9IFNwbGFzaFNjcmVlbjtcclxuIl19