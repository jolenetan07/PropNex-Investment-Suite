'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var core$1 = require('@angular/core');
var core = require('@ionic-native/core');

var ɵngcc0 = require('@angular/core');
var StatusBar = /** @class */ (function (_super) {
    tslib.__extends(StatusBar, _super);
    function StatusBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StatusBar.prototype.overlaysWebView = function (doesOverlay) { return core.cordova(this, "overlaysWebView", { "sync": true }, arguments); };
    StatusBar.prototype.styleDefault = function () { return core.cordova(this, "styleDefault", { "sync": true }, arguments); };
    StatusBar.prototype.styleLightContent = function () { return core.cordova(this, "styleLightContent", { "sync": true }, arguments); };
    StatusBar.prototype.styleBlackTranslucent = function () { return core.cordova(this, "styleBlackTranslucent", { "sync": true }, arguments); };
    StatusBar.prototype.styleBlackOpaque = function () { return core.cordova(this, "styleBlackOpaque", { "sync": true }, arguments); };
    StatusBar.prototype.backgroundColorByName = function (colorName) { return core.cordova(this, "backgroundColorByName", { "sync": true }, arguments); };
    StatusBar.prototype.backgroundColorByHexString = function (hexString) { return core.cordova(this, "backgroundColorByHexString", { "sync": true }, arguments); };
    StatusBar.prototype.hide = function () { return core.cordova(this, "hide", { "sync": true }, arguments); };
    StatusBar.prototype.show = function () { return core.cordova(this, "show", { "sync": true }, arguments); };
    Object.defineProperty(StatusBar.prototype, "isVisible", {
        get: function () { return core.cordovaPropertyGet(this, "isVisible"); },
        set: function (value) { core.cordovaPropertySet(this, "isVisible", value); },
        enumerable: false,
        configurable: true
    });
    StatusBar.pluginName = "StatusBar";
    StatusBar.plugin = "cordova-plugin-statusbar";
    StatusBar.pluginRef = "StatusBar";
    StatusBar.repo = "https://github.com/apache/cordova-plugin-statusbar";
    StatusBar.platforms = ["Android", "iOS", "Windows"];
StatusBar.ɵfac = function StatusBar_Factory(t) { return ɵStatusBar_BaseFactory(t || StatusBar); };
StatusBar.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: StatusBar, factory: function (t) { return StatusBar.ɵfac(t); } });
var ɵStatusBar_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(StatusBar);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StatusBar, [{
        type: core$1.Injectable
    }], null, null); })();
    return StatusBar;
}(core.IonicNativePlugin));

exports.StatusBar = StatusBar;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJidW5kbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OzBCQUdNO0FBQ047QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5cclxudmFyIHRzbGliID0gcmVxdWlyZSgndHNsaWInKTtcclxudmFyIGNvcmUkMSA9IHJlcXVpcmUoJ0Bhbmd1bGFyL2NvcmUnKTtcclxudmFyIGNvcmUgPSByZXF1aXJlKCdAaW9uaWMtbmF0aXZlL2NvcmUnKTtcclxuXHJcbnZhciBTdGF0dXNCYXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICB0c2xpYi5fX2V4dGVuZHMoU3RhdHVzQmFyLCBfc3VwZXIpO1xyXG4gICAgZnVuY3Rpb24gU3RhdHVzQmFyKCkge1xyXG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcclxuICAgIH1cclxuICAgIFN0YXR1c0Jhci5wcm90b3R5cGUub3ZlcmxheXNXZWJWaWV3ID0gZnVuY3Rpb24gKGRvZXNPdmVybGF5KSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJvdmVybGF5c1dlYlZpZXdcIiwgeyBcInN5bmNcIjogdHJ1ZSB9LCBhcmd1bWVudHMpOyB9O1xyXG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5zdHlsZURlZmF1bHQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJzdHlsZURlZmF1bHRcIiwgeyBcInN5bmNcIjogdHJ1ZSB9LCBhcmd1bWVudHMpOyB9O1xyXG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5zdHlsZUxpZ2h0Q29udGVudCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcInN0eWxlTGlnaHRDb250ZW50XCIsIHsgXCJzeW5jXCI6IHRydWUgfSwgYXJndW1lbnRzKTsgfTtcclxuICAgIFN0YXR1c0Jhci5wcm90b3R5cGUuc3R5bGVCbGFja1RyYW5zbHVjZW50ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic3R5bGVCbGFja1RyYW5zbHVjZW50XCIsIHsgXCJzeW5jXCI6IHRydWUgfSwgYXJndW1lbnRzKTsgfTtcclxuICAgIFN0YXR1c0Jhci5wcm90b3R5cGUuc3R5bGVCbGFja09wYXF1ZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcInN0eWxlQmxhY2tPcGFxdWVcIiwgeyBcInN5bmNcIjogdHJ1ZSB9LCBhcmd1bWVudHMpOyB9O1xyXG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5iYWNrZ3JvdW5kQ29sb3JCeU5hbWUgPSBmdW5jdGlvbiAoY29sb3JOYW1lKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJiYWNrZ3JvdW5kQ29sb3JCeU5hbWVcIiwgeyBcInN5bmNcIjogdHJ1ZSB9LCBhcmd1bWVudHMpOyB9O1xyXG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5iYWNrZ3JvdW5kQ29sb3JCeUhleFN0cmluZyA9IGZ1bmN0aW9uIChoZXhTdHJpbmcpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcImJhY2tncm91bmRDb2xvckJ5SGV4U3RyaW5nXCIsIHsgXCJzeW5jXCI6IHRydWUgfSwgYXJndW1lbnRzKTsgfTtcclxuICAgIFN0YXR1c0Jhci5wcm90b3R5cGUuaGlkZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcImhpZGVcIiwgeyBcInN5bmNcIjogdHJ1ZSB9LCBhcmd1bWVudHMpOyB9O1xyXG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic2hvd1wiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3RhdHVzQmFyLnByb3RvdHlwZSwgXCJpc1Zpc2libGVcIiwge1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhUHJvcGVydHlHZXQodGhpcywgXCJpc1Zpc2libGVcIik7IH0sXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHsgY29yZS5jb3Jkb3ZhUHJvcGVydHlTZXQodGhpcywgXCJpc1Zpc2libGVcIiwgdmFsdWUpOyB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBTdGF0dXNCYXIucGx1Z2luTmFtZSA9IFwiU3RhdHVzQmFyXCI7XHJcbiAgICBTdGF0dXNCYXIucGx1Z2luID0gXCJjb3Jkb3ZhLXBsdWdpbi1zdGF0dXNiYXJcIjtcclxuICAgIFN0YXR1c0Jhci5wbHVnaW5SZWYgPSBcIlN0YXR1c0JhclwiO1xyXG4gICAgU3RhdHVzQmFyLnJlcG8gPSBcImh0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvY29yZG92YS1wbHVnaW4tc3RhdHVzYmFyXCI7XHJcbiAgICBTdGF0dXNCYXIucGxhdGZvcm1zID0gW1wiQW5kcm9pZFwiLCBcImlPU1wiLCBcIldpbmRvd3NcIl07XHJcbiAgICBTdGF0dXNCYXIuZGVjb3JhdG9ycyA9IFtcclxuICAgICAgICB7IHR5cGU6IGNvcmUkMS5JbmplY3RhYmxlIH1cclxuICAgIF07XHJcbiAgICByZXR1cm4gU3RhdHVzQmFyO1xyXG59KGNvcmUuSW9uaWNOYXRpdmVQbHVnaW4pKTtcclxuXHJcbmV4cG9ydHMuU3RhdHVzQmFyID0gU3RhdHVzQmFyO1xyXG4iXX0=