'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var core$1 = require('@angular/core');
var core = require('@ionic-native/core');

var ɵngcc0 = require('@angular/core');
var StatusBar = /** @class */ (function (_super) {
    tslib.__extends(StatusBar, _super);
    function StatusBar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StatusBar.prototype.overlaysWebView = function (doesOverlay) { return core.cordova(this, "overlaysWebView", { "sync": true }, arguments); };
    StatusBar.prototype.styleDefault = function () { return core.cordova(this, "styleDefault", { "sync": true }, arguments); };
    StatusBar.prototype.styleLightContent = function () { return core.cordova(this, "styleLightContent", { "sync": true }, arguments); };
    StatusBar.prototype.styleBlackTranslucent = function () { return core.cordova(this, "styleBlackTranslucent", { "sync": true }, arguments); };
    StatusBar.prototype.styleBlackOpaque = function () { return core.cordova(this, "styleBlackOpaque", { "sync": true }, arguments); };
    StatusBar.prototype.backgroundColorByName = function (colorName) { return core.cordova(this, "backgroundColorByName", { "sync": true }, arguments); };
    StatusBar.prototype.backgroundColorByHexString = function (hexString) { return core.cordova(this, "backgroundColorByHexString", { "sync": true }, arguments); };
    StatusBar.prototype.hide = function () { return core.cordova(this, "hide", { "sync": true }, arguments); };
    StatusBar.prototype.show = function () { return core.cordova(this, "show", { "sync": true }, arguments); };
    Object.defineProperty(StatusBar.prototype, "isVisible", {
        get: function () { return core.cordovaPropertyGet(this, "isVisible"); },
        set: function (value) { core.cordovaPropertySet(this, "isVisible", value); },
        enumerable: false,
        configurable: true
    });
    StatusBar.pluginName = "StatusBar";
    StatusBar.plugin = "cordova-plugin-statusbar";
    StatusBar.pluginRef = "StatusBar";
    StatusBar.repo = "https://github.com/apache/cordova-plugin-statusbar";
    StatusBar.platforms = ["Android", "iOS", "Windows"];
StatusBar.ɵfac = function StatusBar_Factory(t) { return ɵStatusBar_BaseFactory(t || StatusBar); };
StatusBar.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: StatusBar, factory: function (t) { return StatusBar.ɵfac(t); } });
var ɵStatusBar_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(StatusBar);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StatusBar, [{
        type: core$1.Injectable
    }], null, null); })();
    return StatusBar;
}(core.IonicNativePlugin));

exports.StatusBar = StatusBar;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJidW5kbGUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OzBCQUdNO0FBQ047QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbnZhciB0c2xpYiA9IHJlcXVpcmUoJ3RzbGliJyk7XG52YXIgY29yZSQxID0gcmVxdWlyZSgnQGFuZ3VsYXIvY29yZScpO1xudmFyIGNvcmUgPSByZXF1aXJlKCdAaW9uaWMtbmF0aXZlL2NvcmUnKTtcblxudmFyIFN0YXR1c0JhciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICB0c2xpYi5fX2V4dGVuZHMoU3RhdHVzQmFyLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFN0YXR1c0JhcigpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBTdGF0dXNCYXIucHJvdG90eXBlLm92ZXJsYXlzV2ViVmlldyA9IGZ1bmN0aW9uIChkb2VzT3ZlcmxheSkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwib3ZlcmxheXNXZWJWaWV3XCIsIHsgXCJzeW5jXCI6IHRydWUgfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTdGF0dXNCYXIucHJvdG90eXBlLnN0eWxlRGVmYXVsdCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcInN0eWxlRGVmYXVsdFwiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5zdHlsZUxpZ2h0Q29udGVudCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcInN0eWxlTGlnaHRDb250ZW50XCIsIHsgXCJzeW5jXCI6IHRydWUgfSwgYXJndW1lbnRzKTsgfTtcbiAgICBTdGF0dXNCYXIucHJvdG90eXBlLnN0eWxlQmxhY2tUcmFuc2x1Y2VudCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvcmUuY29yZG92YSh0aGlzLCBcInN0eWxlQmxhY2tUcmFuc2x1Y2VudFwiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5zdHlsZUJsYWNrT3BhcXVlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic3R5bGVCbGFja09wYXF1ZVwiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5iYWNrZ3JvdW5kQ29sb3JCeU5hbWUgPSBmdW5jdGlvbiAoY29sb3JOYW1lKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJiYWNrZ3JvdW5kQ29sb3JCeU5hbWVcIiwgeyBcInN5bmNcIjogdHJ1ZSB9LCBhcmd1bWVudHMpOyB9O1xuICAgIFN0YXR1c0Jhci5wcm90b3R5cGUuYmFja2dyb3VuZENvbG9yQnlIZXhTdHJpbmcgPSBmdW5jdGlvbiAoaGV4U3RyaW5nKSB7IHJldHVybiBjb3JlLmNvcmRvdmEodGhpcywgXCJiYWNrZ3JvdW5kQ29sb3JCeUhleFN0cmluZ1wiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwiaGlkZVwiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgU3RhdHVzQmFyLnByb3RvdHlwZS5zaG93ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gY29yZS5jb3Jkb3ZhKHRoaXMsIFwic2hvd1wiLCB7IFwic3luY1wiOiB0cnVlIH0sIGFyZ3VtZW50cyk7IH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFN0YXR1c0Jhci5wcm90b3R5cGUsIFwiaXNWaXNpYmxlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb3JlLmNvcmRvdmFQcm9wZXJ0eUdldCh0aGlzLCBcImlzVmlzaWJsZVwiKTsgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHsgY29yZS5jb3Jkb3ZhUHJvcGVydHlTZXQodGhpcywgXCJpc1Zpc2libGVcIiwgdmFsdWUpOyB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgU3RhdHVzQmFyLnBsdWdpbk5hbWUgPSBcIlN0YXR1c0JhclwiO1xuICAgIFN0YXR1c0Jhci5wbHVnaW4gPSBcImNvcmRvdmEtcGx1Z2luLXN0YXR1c2JhclwiO1xuICAgIFN0YXR1c0Jhci5wbHVnaW5SZWYgPSBcIlN0YXR1c0JhclwiO1xuICAgIFN0YXR1c0Jhci5yZXBvID0gXCJodHRwczovL2dpdGh1Yi5jb20vYXBhY2hlL2NvcmRvdmEtcGx1Z2luLXN0YXR1c2JhclwiO1xuICAgIFN0YXR1c0Jhci5wbGF0Zm9ybXMgPSBbXCJBbmRyb2lkXCIsIFwiaU9TXCIsIFwiV2luZG93c1wiXTtcbiAgICBTdGF0dXNCYXIuZGVjb3JhdG9ycyA9IFtcbiAgICAgICAgeyB0eXBlOiBjb3JlJDEuSW5qZWN0YWJsZSB9XG4gICAgXTtcbiAgICByZXR1cm4gU3RhdHVzQmFyO1xufShjb3JlLklvbmljTmF0aXZlUGx1Z2luKSk7XG5cbmV4cG9ydHMuU3RhdHVzQmFyID0gU3RhdHVzQmFyO1xuIl19