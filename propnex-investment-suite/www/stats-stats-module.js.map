{"version":3,"sources":["./src/app/stats/stats.page.html","./src/app/stats/stats-data.service.ts","./src/app/stats/stats-routing.module.ts","./src/app/stats/stats.module.ts","./src/app/stats/stats.page.scss","./src/app/stats/stats.page.ts"],"names":[],"mappings":"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","file":"stats-stats-module.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Statistical Insights</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-no-padding\\\">\\r\\n  <ion-grid class=\\\"ion-no-padding\\\">\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-card class=\\\"ion-no-padding\\\">\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>Price and Volume Trends\\r\\n              <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"trendsInfoClick()\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"information-circle\\\"></ion-icon>\\r\\n              </ion-button></ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <div id=\\\"price-trends-graph\\\"></div>\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-title>Most Number of Units Sold\\r\\n            <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"countInfoClick()\\\">\\r\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"information-circle\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <ion-list>\\r\\n\\r\\n            <ion-item-group>\\r\\n              <ion-item-divider color=\\\"medium\\\" (click)=\\\"numLocButton()\\\">\\r\\n                <ion-label>\\r\\n                  <h2>By Location</h2>\\r\\n                </ion-label>\\r\\n              </ion-item-divider>\\r\\n\\r\\n              <ion-item *ngFor=\\\"let region of count_data\\\" [hidden]=\\\"numLocHidden\\\">\\r\\n                <ion-text slot=\\\"start\\\">\\r\\n                  {{region[0]}}\\r\\n                </ion-text>\\r\\n                <ion-text slot=\\\"end\\\">\\r\\n                  {{region[1]}} units\\r\\n                </ion-text>\\r\\n              </ion-item>\\r\\n            </ion-item-group>\\r\\n\\r\\n            <ion-item-group>\\r\\n              <ion-item-divider color=\\\"medium\\\" (click)=\\\"numTypeButton()\\\">\\r\\n                <ion-label>\\r\\n                  <h2>By Type</h2>\\r\\n                </ion-label>\\r\\n              </ion-item-divider>\\r\\n\\r\\n              <ion-item *ngFor=\\\"let region of countT_data\\\" [hidden]=\\\"numTypeHidden\\\">\\r\\n                <ion-text slot=\\\"start\\\">\\r\\n                  {{region[0]}}\\r\\n                </ion-text>\\r\\n                <ion-text slot=\\\"end\\\">\\r\\n                  {{region[1]}} units\\r\\n                </ion-text>\\r\\n              </ion-item>\\r\\n            </ion-item-group>\\r\\n\\r\\n          </ion-list>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n    \\r\\n    <ion-col>\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-title>Most Expensive Units\\r\\n            <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"maxInfoClick()\\\">\\r\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"information-circle\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <ion-list>\\r\\n\\r\\n            <ion-item-group>\\r\\n              <ion-item-divider color=\\\"medium\\\" (click)=\\\"expLocButton()\\\">\\r\\n                <ion-label>\\r\\n                  <h2>By Location</h2>\\r\\n                </ion-label>\\r\\n              </ion-item-divider>\\r\\n\\r\\n              <ion-item *ngFor=\\\"let region of max_data\\\" [hidden]=\\\"expLocHidden\\\">\\r\\n                <ion-text slot=\\\"start\\\">\\r\\n                  {{region[0]}}\\r\\n                </ion-text>\\r\\n                <ion-text slot=\\\"end\\\">\\r\\n                  ${{region[1]}} psm\\r\\n                </ion-text>\\r\\n              </ion-item>\\r\\n            </ion-item-group>\\r\\n\\r\\n            <ion-item-group>\\r\\n              <ion-item-divider color=\\\"medium\\\" (click)=\\\"expTypeButton()\\\">\\r\\n                <ion-label>\\r\\n                  <h2>By Type</h2>\\r\\n                </ion-label>\\r\\n              </ion-item-divider>\\r\\n\\r\\n              <ion-item *ngFor=\\\"let region of maxT_data\\\" [hidden]=\\\"expTypeHidden\\\">\\r\\n                <ion-text slot=\\\"start\\\">\\r\\n                  {{region[0]}}\\r\\n                </ion-text>\\r\\n                <ion-text slot=\\\"end\\\">\\r\\n                  ${{region[1]}} psm\\r\\n                </ion-text>\\r\\n              </ion-item>\\r\\n            </ion-item-group>\\r\\n\\r\\n          </ion-list>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>Most Expensive Locations\\r\\n              <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"avgLocInfoClick()\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"information-circle\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <ion-item *ngFor=\\\"let region of avg_data\\\">\\r\\n              <ion-text slot=\\\"start\\\">\\r\\n                {{region[0]}}\\r\\n              </ion-text>\\r\\n              <ion-text slot=\\\"end\\\">\\r\\n                ${{region[1]}} psm\\r\\n              </ion-text>\\r\\n            </ion-item>\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n      <ion-col>\\r\\n        <ion-card>\\r\\n          <ion-card-header>\\r\\n            <ion-card-title>Most Expensive Property Types\\r\\n              <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"avgTypeInfoClick()\\\">\\r\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"information-circle\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-card-title>\\r\\n          </ion-card-header>\\r\\n          <ion-card-content>\\r\\n            <ion-item *ngFor=\\\"let type of avgT_data\\\">\\r\\n              <ion-text slot=\\\"start\\\">\\r\\n                {{type[0]}}\\r\\n              </ion-text>\\r\\n              <ion-text slot=\\\"end\\\">\\r\\n                ${{type[1]}} psm\\r\\n              </ion-text>\\r\\n            </ion-item>\\r\\n          </ion-card-content>\\r\\n        </ion-card>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Platform } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatsDataService {\r\n  // public csv_data = \"default\";\r\n\r\n  private readonly count_URL:string = 'assets/stats/count_by_district.csv';\r\n  private readonly countT_URL:string = 'assets/stats/count_by_type.csv';\r\n  private readonly avg_URL:string = 'assets/stats/avg_by_district.csv';\r\n  private readonly avgT_URL:string = 'assets/stats/avg_by_type.csv';\r\n  private readonly max_URL:string = 'assets/stats/max_by_district.csv';\r\n  private readonly maxT_URL:string = 'assets/stats/max_by_type.csv';\r\n\r\n  \r\n  private readonly price_psm_URL:string = 'assets/stats/price_psm_graph.json';\r\n  private readonly volume_URL:string = 'assets/stats/volume_graph.json';\r\n\r\n  constructor(protected http: HttpClient, public platform: Platform) { \r\n    let android_prefix:string = 'file:///android_asset/www/';\r\n    if (platform.is('android')){\r\n      this.price_psm_URL = android_prefix.concat(this.price_psm_URL);\r\n      this.volume_URL = android_prefix.concat(this.volume_URL);\r\n      this.count_URL = android_prefix.concat(this.count_URL);\r\n      this.countT_URL = android_prefix.concat(this.countT_URL);\r\n      this.avg_URL = android_prefix.concat(this.avg_URL);\r\n      this.avgT_URL = android_prefix.concat(this.avgT_URL);\r\n      this.max_URL = android_prefix.concat(this.max_URL);\r\n      this.maxT_URL = android_prefix.concat(this.maxT_URL);\r\n    }\r\n  }\r\n\r\n  getPricepsmData(){\r\n    console.log(\"Fetch price psm data from assets\");\r\n    return this.http.get(this.price_psm_URL);\r\n  }\r\n\r\n  getVolumeData(){\r\n    console.log(\"Fetch volume data from assets\");\r\n    return this.http.get(this.volume_URL);\r\n  }\r\n\r\n  getCountData() {\r\n    console.log(\"Fetch count stats data from assets\");\r\n    return this.http.get(this.count_URL, { responseType: 'text' });\r\n  }\r\n\r\n  getCountTypeData() {\r\n    console.log(\"Fetch count by type stats data from assets\");\r\n    return this.http.get(this.countT_URL, { responseType: 'text' });\r\n  }\r\n\r\n  getAvgData() {\r\n    console.log(\"Fetch avg stats data from assets\");\r\n    return this.http.get(this.avg_URL, { responseType: 'text' });\r\n  }\r\n\r\n  getAvgTypeData() {\r\n    console.log(\"Fetch avg by type stats data from assets\");\r\n    return this.http.get(this.avgT_URL, { responseType: 'text' });\r\n  }\r\n\r\n  getMaxData() {\r\n    console.log(\"Fetch max stats data from assets\");\r\n    return this.http.get(this.max_URL, { responseType: 'text' });\r\n  }\r\n\r\n  getMaxTypeData() {\r\n    console.log(\"Fetch max by type stats data from assets\");\r\n    return this.http.get(this.maxT_URL, { responseType: 'text' });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { StatsPage } from './stats.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: StatsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class StatsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { StatsPageRoutingModule } from './stats-routing.module';\r\n\r\nimport { StatsPage } from './stats.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    StatsPageRoutingModule\r\n  ],\r\n  declarations: [StatsPage]\r\n})\r\nexport class StatsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXRzL3N0YXRzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport { StatsDataService } from './stats-data.service';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\ndeclare var Plotly: any;\r\n\r\n@Component({\r\n  selector: 'app-stats',\r\n  templateUrl: './stats.page.html',\r\n  styleUrls: ['./stats.page.scss'],\r\n})\r\nexport class StatsPage implements OnInit {\r\n  private width: number;\r\n  // private height;\r\n  public count_data;\r\n  public countT_data;\r\n  public avg_data;\r\n  public avgT_data;\r\n  public max_data;\r\n  public maxT_data;\r\n\r\n  numLocHidden = false;\r\n  numTypeHidden = false;\r\n  expLocHidden = false;\r\n  expTypeHidden = false;\r\n\r\n  private pricepsmData;\r\n  private volumeData;\r\n\r\n  constructor(private dataService: StatsDataService, private alertController: AlertController) { }\r\n\r\n  ngOnInit() {\r\n    this.dataService.getCountData().subscribe(data=>{this.count_data = data});\r\n    this.dataService.getCountTypeData().subscribe(data=>{this.countT_data = data});\r\n    this.dataService.getAvgData().subscribe(data=>{this.avg_data = data});\r\n    this.dataService.getAvgTypeData().subscribe(data=>{this.avgT_data = data});\r\n    this.dataService.getMaxData().subscribe(data=>{this.max_data = data});\r\n    this.dataService.getMaxTypeData().subscribe(data=>{this.maxT_data = data});\r\n\r\n    this.dataService.getPricepsmData().subscribe(data=>{\r\n      this.pricepsmData = data\r\n    });\r\n    this.dataService.getVolumeData().subscribe(data=>{\r\n      this.volumeData = data\r\n    });\r\n\r\n    this.width  = window.innerWidth;\r\n    // this.height  = window.innerHeight;\r\n\r\n  }\r\n\r\n  ionViewWillEnter(){\r\n    this.pricepsmData[\"name\"] = \"Price psm\";\r\n    this.volumeData[\"name\"] = \"Volume\";\r\n    let data = [this.pricepsmData, this.volumeData];\r\n\r\n    let layout = {\r\n      showlegend: false,\r\n      dragmode: 'pan',\r\n      margin: {l:25, r:15, t:10, b:20},\r\n      width: this.width\r\n    };\r\n\r\n    let configs = {\r\n      scrollZoom: false,\r\n      responsive: true,\r\n      displaylogo: false,\r\n      modeBarButtonsToRemove: ['select2d', 'lasso2d', 'zoom2d', 'resetScale2d']\r\n    }\r\n\r\n    Plotly.newPlot('price-trends-graph', data, layout, configs);\r\n\r\n\r\n    this.count_data = this.count_data.split(\"\\r\\n\").slice(1,6); \r\n    for (let i = 0; i < 5; i++){\r\n      this.count_data[i] = this.count_data[i].split(\",\");\r\n    }\r\n    this.count_data = this.count_data.sort(this.sort2Darray);\r\n    \r\n    this.countT_data = this.countT_data.split(\"\\r\\n\").slice(1,17); \r\n    for (let i = 0; i < 16; i++){\r\n      this.countT_data[i] = this.countT_data[i].split(\",\");\r\n    }\r\n    this.countT_data = this.countT_data.sort(this.sort2Darray);\r\n\r\n    this.avg_data = this.avg_data.split(\"\\r\\n\").slice(1,6); \r\n    for (let i = 0; i < 5; i++){\r\n      this.avg_data[i] = this.avg_data[i].split(\",\");\r\n      this.avg_data[i][1] = this.avg_data[i][1].slice(0,this.avg_data[i][1].indexOf(\".\"));\r\n    }\r\n    this.avg_data = this.avg_data.sort(this.sort2Darray);\r\n\r\n    this.avgT_data = this.avgT_data.split(\"\\r\\n\").slice(1,17); \r\n    for (let i = 0; i < 16; i++){\r\n      this.avgT_data[i] = this.avgT_data[i].split(\",\");\r\n      this.avgT_data[i][1] = this.avgT_data[i][1].slice(0,this.avgT_data[i][1].indexOf(\".\"));\r\n    }\r\n    this.avgT_data = this.avgT_data.sort(this.sort2Darray);\r\n    \r\n    this.max_data = this.max_data.split(\"\\r\\n\").slice(1,6); \r\n    for (let i = 0; i < 5; i++){\r\n      this.max_data[i] = this.max_data[i].split(\",\");\r\n      this.max_data[i][1] = this.max_data[i][1].slice(0,this.max_data[i][1].indexOf(\".\"));\r\n    }\r\n    this.max_data = this.max_data.sort(this.sort2Darray);\r\n\r\n    this.maxT_data = this.maxT_data.split(\"\\r\\n\").slice(1,17); \r\n    for (let i = 0; i < 16; i++){\r\n      this.maxT_data[i] = this.maxT_data[i].split(\",\");\r\n      this.maxT_data[i][1] = this.maxT_data[i][1].slice(0,this.maxT_data[i][1].indexOf(\".\"));\r\n    }\r\n    this.maxT_data = this.maxT_data.sort(this.sort2Darray);\r\n\r\n    console.log(this.count_data);\r\n    console.log(this.avg_data);\r\n    console.log(this.max_data);\r\n    console.log(this.pricepsmData)\r\n  }\r\n\r\n  async countInfoClick() {\r\n    console.log(\"count info button clicked\");\r\n    const alert = await this.alertController.create({\r\n      header: 'Most Number of Units Sold',\r\n      subHeader: 'How is this calculated?',\r\n      message: 'All transactions over the last 6 months are grouped by their region/type, and the number of transactions for each region/type is totaled.',\r\n      buttons: ['OK'],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  async trendsInfoClick(){\r\n    console.log(\"trends info button clicked\");\r\n    const alert = await this.alertController.create({\r\n      header: 'Price and Volume Trends',\r\n      subHeader: 'How is this calculated?',\r\n      message: 'All transactions are averaged by month, then the average price per square meter and volume of transactions each month are presented.',\r\n      buttons: ['OK'],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n  \r\n  async maxInfoClick(){\r\n    console.log(\"max info button clicked\");\r\n    const alert = await this.alertController.create({\r\n      header: 'Most Expensive Units',\r\n      subHeader: 'How is this calculated?',\r\n      message: 'All transactions over the last 6 months are grouped by their region/type, and the most expensive transaction by price per square meter is presented.',\r\n      buttons: ['OK'],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  async avgLocInfoClick(){\r\n    console.log(\"avgLocInfoClick\");\r\n    const alert = await this.alertController.create({\r\n      header: 'Most Expensive Locations',\r\n      subHeader: 'How is this calculated?',\r\n      message: 'All transactions over the last 6 months are grouped by their region, and the mean for each region presented.',\r\n      buttons: ['OK'],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  async avgTypeInfoClick(){\r\n    console.log(\"avgLocInfoClick\");\r\n    const alert = await this.alertController.create({\r\n      header: 'Most Expensive Property Types',\r\n      subHeader: 'How is this calculated?',\r\n      message: 'All transactions over the last 6 months are grouped by their type, and the mean for each type presented.',\r\n      buttons: ['OK'],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  private sort2Darray(a,b){\r\n    let a1 = Number(a[1]);\r\n    let b1 = Number(b[1]);\r\n    return b1-a1;\r\n  }\r\n\r\n  numLocButton(){\r\n    console.log(\"numLocButton\");\r\n    this.numLocHidden = !this.numLocHidden;\r\n  }\r\n  numTypeButton(){\r\n    console.log(\"numTypeButton\");\r\n    this.numTypeHidden = !this.numTypeHidden;\r\n  }\r\n  expLocButton(){\r\n    console.log(\"ExpLocButton\");\r\n    this.expLocHidden = !this.expLocHidden;\r\n  }\r\n  expTypeButton(){\r\n    console.log(\"ExpTypeButton\");\r\n    this.expTypeHidden = !this.expTypeHidden;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}