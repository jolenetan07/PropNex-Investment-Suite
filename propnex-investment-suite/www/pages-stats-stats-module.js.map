{"version":3,"sources":["./src/app/pages/stats/stats.page.html","./src/app/pages/stats/stats-data.service.ts","./src/app/pages/stats/stats-routing.module.ts","./src/app/pages/stats/stats.module.ts","./src/app/pages/stats/stats.page.scss","./src/app/pages/stats/stats.page.ts"],"names":[],"mappings":"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","file":"pages-stats-stats-module.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Statistical Insights</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-no-padding\\\">\\n  <ion-grid class=\\\"ion-no-padding\\\">\\n    <ion-row>\\n      <ion-col>\\n        <ion-card class=\\\"ion-no-padding\\\">\\n          <ion-card-header>\\n            <ion-card-title>Price and Volume Trends\\n              <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"trendsInfoClick()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"information-circle\\\"></ion-icon>\\n              </ion-button></ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-list>\\n              <ion-item>\\n                <ion-text slot=\\\"start\\\"> Filter: </ion-text>\\n                <ion-select placeholder=\\\"All\\\" [multiple]=\\\"true\\\" [value]=\\\"['all']\\\" (ionChange)=\\\"handleChange($event)\\\">\\n                  <ion-select-option value=\\\"all\\\">All Units</ion-select-option>\\n                  <ion-select-option value=\\\"central\\\">Central District</ion-select-option>\\n                  <ion-select-option value=\\\"east\\\">East District</ion-select-option>\\n                  <ion-select-option value=\\\"ne\\\">North-East District</ion-select-option>\\n                  <ion-select-option value=\\\"north\\\">North District</ion-select-option>\\n                  <ion-select-option value=\\\"west\\\">West District</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n            </ion-list>\\n            <div id=\\\"price-trends-graph\\\"></div>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title>Most Number of Units Sold\\n            <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"countInfoClick()\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"information-circle\\\"></ion-icon>\\n            </ion-button>\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-list>\\n\\n            <ion-item-group>\\n              <ion-item-divider color=\\\"medium\\\" (click)=\\\"numLocButton()\\\">\\n                <ion-label>\\n                  <h2>By Location</h2>\\n                </ion-label>\\n              </ion-item-divider>\\n\\n              <ion-item *ngFor=\\\"let region of count_dataArr\\\" [hidden]=\\\"numLocHidden\\\">\\n                <ion-text slot=\\\"start\\\">\\n                  {{region[0]}}\\n                </ion-text>\\n                <ion-text slot=\\\"end\\\">\\n                  {{region[1]}} units\\n                </ion-text>\\n              </ion-item>\\n            </ion-item-group>\\n\\n            <ion-item-group>\\n              <ion-item-divider color=\\\"medium\\\" (click)=\\\"numTypeButton()\\\">\\n                <ion-label>\\n                  <h2>By Type</h2>\\n                </ion-label>\\n              </ion-item-divider>\\n\\n              <ion-item *ngFor=\\\"let region of countT_dataArr\\\" [hidden]=\\\"numTypeHidden\\\">\\n                <ion-text slot=\\\"start\\\">\\n                  {{region[0]}}\\n                </ion-text>\\n                <ion-text slot=\\\"end\\\">\\n                  {{region[1]}} units\\n                </ion-text>\\n              </ion-item>\\n            </ion-item-group>\\n\\n          </ion-list>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n    \\n    <ion-col>\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title>Most Expensive Units\\n            <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"maxInfoClick()\\\">\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"information-circle\\\"></ion-icon>\\n            </ion-button>\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <ion-list>\\n\\n            <ion-item-group>\\n              <ion-item-divider color=\\\"medium\\\" (click)=\\\"expLocButton()\\\">\\n                <ion-label>\\n                  <h2>By Location</h2>\\n                </ion-label>\\n              </ion-item-divider>\\n\\n              <ion-item *ngFor=\\\"let region of max_dataArr\\\" [hidden]=\\\"expLocHidden\\\">\\n                <ion-text slot=\\\"start\\\">\\n                  {{region[0]}}\\n                </ion-text>\\n                <ion-text slot=\\\"end\\\">\\n                  ${{region[1]}} psm\\n                </ion-text>\\n              </ion-item>\\n            </ion-item-group>\\n\\n            <ion-item-group>\\n              <ion-item-divider color=\\\"medium\\\" (click)=\\\"expTypeButton()\\\">\\n                <ion-label>\\n                  <h2>By Type</h2>\\n                </ion-label>\\n              </ion-item-divider>\\n\\n              <ion-item *ngFor=\\\"let region of maxT_dataArr\\\" [hidden]=\\\"expTypeHidden\\\">\\n                <ion-text slot=\\\"start\\\">\\n                  {{region[0]}}\\n                </ion-text>\\n                <ion-text slot=\\\"end\\\">\\n                  ${{region[1]}} psm\\n                </ion-text>\\n              </ion-item>\\n            </ion-item-group>\\n\\n          </ion-list>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title>Most Expensive Locations\\n              <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"avgLocInfoClick()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"information-circle\\\"></ion-icon>\\n              </ion-button>\\n            </ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-item *ngFor=\\\"let region of avg_dataArr\\\">\\n              <ion-text slot=\\\"start\\\">\\n                {{region[0]}}\\n              </ion-text>\\n              <ion-text slot=\\\"end\\\">\\n                ${{region[1]}} psm\\n              </ion-text>\\n            </ion-item>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n      <ion-col>\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-card-title>Most Expensive Property Types\\n              <ion-button fill=\\\"clear\\\" size=\\\"small\\\" color=\\\"medium\\\" (click)=\\\"avgTypeInfoClick()\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"information-circle\\\"></ion-icon>\\n              </ion-button>\\n            </ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-item *ngFor=\\\"let type of avgT_dataArr\\\">\\n              <ion-text slot=\\\"start\\\">\\n                {{type[0]}}\\n              </ion-text>\\n              <ion-text slot=\\\"end\\\">\\n                ${{type[1]}} psm\\n              </ion-text>\\n            </ion-item>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatsDataService {\n  // public csv_data = \"default\";\n\n  private readonly count_URL = 'assets/stats/count_by_district.csv';\n  private readonly countT_URL = 'assets/stats/count_by_type.csv';\n  private readonly avg_URL = 'assets/stats/avg_by_district.csv';\n  private readonly avgT_URL = 'assets/stats/avg_by_type.csv';\n  private readonly max_URL = 'assets/stats/max_by_district.csv';\n  private readonly maxT_URL = 'assets/stats/max_by_type.csv';\n\n  \n  private readonly price_psm_URL = 'assets/stats/price_psm_graph.json';\n  private readonly central_URL = 'assets/stats/Central_Region.json';\n  private readonly east_URL = 'assets/stats/East_Region.json';\n  private readonly ne_URL = 'assets/stats/North_East_Region.json';\n  private readonly north_URL = 'assets/stats/North_Region.json';\n  private readonly west_URL = 'assets/stats/West_Region.json';\n  private readonly volume_URL = 'assets/stats/volume_graph.json';\n\n  private readonly mean_pred_URL = 'assets/stats/price_pred.json';\n  private readonly central_pred_URL = 'assets/stats/Central_Region_Pred.json';\n  private readonly east_pred_URL = 'assets/stats/East_Region_Pred.json';\n  private readonly ne_pred_URL = 'assets/stats/North_East_Region_Pred.json';\n  private readonly north_pred_URL = 'assets/stats/North_Region_Pred.json';\n  private readonly west_pred_URL = 'assets/stats/West_Region_Pred.json';\n\n  constructor(protected http: HttpClient) { }\n\n  getPricepsmData(){\n    console.log(\"Fetch price psm data from assets\");\n    return this.http.get(this.price_psm_URL);\n  }\n\n  getMeanPredData(){\n    console.log(\"Fetch mean pred data from assets\");\n    return this.http.get(this.mean_pred_URL);\n  }\n\n  getCentralData(){\n    console.log(\"Fetch central data from assets\");\n    return this.http.get(this.central_URL);\n  }\n\n  getEastData(){\n    console.log(\"Fetch east data from assets\");\n    return this.http.get(this.east_URL);\n  }\n\n  getNEData(){\n    console.log(\"Fetch north-east data from assets\");\n    return this.http.get(this.ne_URL);\n  }\n\n  getNorthData(){\n    console.log(\"Fetch north data from assets\");\n    return this.http.get(this.north_URL);\n  }\n\n  getWestData(){\n    console.log(\"Fetch west data from assets\");\n    return this.http.get(this.west_URL);\n  }\n\n  getCentralPredData(){\n    console.log(\"Fetch central pred data from assets\");\n    return this.http.get(this.central_pred_URL);\n  }\n\n  getEastPredData(){\n    console.log(\"Fetch east pred data from assets\");\n    return this.http.get(this.east_pred_URL);\n  }\n\n  getNEPredData(){\n    console.log(\"Fetch north-east pred data from assets\");\n    return this.http.get(this.ne_pred_URL);\n  }\n\n  getNorthPredData(){\n    console.log(\"Fetch north pred data from assets\");\n    return this.http.get(this.north_pred_URL);\n  }\n\n  getWestPredData(){\n    console.log(\"Fetch west pred data from assets\");\n    return this.http.get(this.west_pred_URL);\n  }\n\n  getVolumeData(){\n    console.log(\"Fetch volume data from assets\");\n    return this.http.get(this.volume_URL);\n  }\n\n  getCountData() {\n    console.log(\"Fetch count stats data from assets\");\n    return this.http.get(this.count_URL, { responseType: 'text' });\n  }\n\n  getCountTypeData() {\n    console.log(\"Fetch count by type stats data from assets\");\n    return this.http.get(this.countT_URL, { responseType: 'text' });\n  }\n\n  getAvgData() {\n    console.log(\"Fetch avg stats data from assets\");\n    return this.http.get(this.avg_URL, { responseType: 'text' });\n  }\n\n  getAvgTypeData() {\n    console.log(\"Fetch avg by type stats data from assets\");\n    return this.http.get(this.avgT_URL, { responseType: 'text' });\n  }\n\n  getMaxData() {\n    console.log(\"Fetch max stats data from assets\");\n    return this.http.get(this.max_URL, { responseType: 'text' });\n  }\n\n  getMaxTypeData() {\n    console.log(\"Fetch max by type stats data from assets\");\n    return this.http.get(this.maxT_URL, { responseType: 'text' });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StatsPage } from './stats.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StatsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StatsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StatsPageRoutingModule } from './stats-routing.module';\n\nimport { StatsPage } from './stats.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StatsPageRoutingModule\n  ],\n  declarations: [StatsPage]\n})\nexport class StatsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3N0YXRzL3N0YXRzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, Injectable } from '@angular/core';\nimport { StatsDataService } from './stats-data.service';\nimport { AlertController } from '@ionic/angular';\nimport { FormControl } from '@angular/forms';\n\ndeclare var Plotly: any;\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.page.html',\n  styleUrls: ['./stats.page.scss'],\n})\nexport class StatsPage implements OnInit {\n  private width: number;\n  // private height;\n  public count_data;\n  public countT_data;\n  public avg_data;\n  public avgT_data;\n  public max_data;\n  public maxT_data;\n\n  public count_dataArr;\n  public countT_dataArr;\n  public avg_dataArr;\n  public avgT_dataArr;\n  public max_dataArr;\n  public maxT_dataArr;\n\n\n  numLocHidden = false;\n  numTypeHidden = false;\n  expLocHidden = false;\n  expTypeHidden = false;\n\n  private pricepsmData;\n  private centralData;\n  private eastData;\n  private neData;\n  private northData;\n  private westData;\n  private meanPredData;\n  private centralPredData;\n  private eastPredData;\n  private nePredData;\n  private northPredData;\n  private westPredData;\n  private volumeData;\n\n  filterSelectedItems = [\"All Units\"];\n  filterListItems = [\"All Units\", \"Central Region\", \"North Region\", \"West Region\"];\n\n  private data;\n  private configs;\n  private layout;\n  private plot_id = 'price-trends-graph';\n\n  constructor(private dataService: StatsDataService, private alertController: AlertController) { }\n\n  ngOnInit() {\n    this.dataService.getCountData().subscribe(data=>{this.count_data = data});\n    this.dataService.getCountTypeData().subscribe(data=>{this.countT_data = data});\n    this.dataService.getAvgData().subscribe(data=>{this.avg_data = data});\n    this.dataService.getAvgTypeData().subscribe(data=>{this.avgT_data = data});\n    this.dataService.getMaxData().subscribe(data=>{this.max_data = data});\n    this.dataService.getMaxTypeData().subscribe(data=>{this.maxT_data = data});\n\n    this.dataService.getPricepsmData().subscribe(data=>{\n      this.pricepsmData = data\n    });\n    this.dataService.getMeanPredData().subscribe(data=>{\n      this.meanPredData = data\n    });\n    this.dataService.getCentralData().subscribe(data=>{\n      this.centralData = data\n    });\n    this.dataService.getEastData().subscribe(data=>{\n      this.eastData = data\n    });\n    this.dataService.getNEData().subscribe(data=>{\n      this.neData = data\n    });\n    this.dataService.getNorthData().subscribe(data=>{\n      this.northData = data\n    });\n    this.dataService.getWestData().subscribe(data=>{\n      this.westData = data\n    });\n    this.dataService.getCentralPredData().subscribe(data=>{\n      this.centralPredData = data\n    });\n    this.dataService.getEastPredData().subscribe(data=>{\n      this.eastPredData = data\n    });\n    this.dataService.getNEPredData().subscribe(data=>{\n      this.nePredData = data\n    });\n    this.dataService.getNorthPredData().subscribe(data=>{\n      this.northPredData = data\n    });\n    this.dataService.getWestPredData().subscribe(data=>{\n      this.westPredData = data\n    });\n\n    this.dataService.getVolumeData().subscribe(data=>{\n      this.volumeData = data\n    });\n\n    this.width  = window.innerWidth;\n    // this.height  = window.innerHeight;\n\n  }\n\n  handleChange(e) {\n    let translate = {\"all\": [this.pricepsmData, this.meanPredData],\n                  \"central\": [this.centralData, this.centralPredData],\n                  \"north\": [this.northData, this.northPredData],\n                  \"east\": [this.eastData, this.eastPredData],\n                  \"ne\": [this.neData, this.nePredData],\n                  \"west\": [this.westData, this.westPredData]};\n    let filter = e.detail.value;\n    this.data = [this.volumeData];\n    for (let i = 0; i < filter.length; i++){\n      this.data.push(translate[filter[i]][0]);\n      this.data.push(translate[filter[i]][1]);\n    }\n\n    Plotly.newPlot(this.plot_id, this.data, this.layout, this.configs);\n    console.log(filter);\n    console.log(this.data)\n\n  }\n\n\n  ionViewWillEnter(){\n    this.pricepsmData[\"name\"] = \"Price psm\";\n    this.meanPredData[\"name\"] = \"Predicted Price psm\";\n    this.centralData[\"name\"] = \"Central Region Price psm\";\n    this.northData[\"name\"] = \"North Region Price psm\";\n    this.eastData[\"name\"] = \"East Region Price psm\";\n    this.neData[\"name\"] = \"North-East Region Price psm\";\n    this.westData[\"name\"] = \"West Region Price psm\";\n    this.centralPredData[\"name\"] = \"Predicted Central Region Price psm\";\n    this.northPredData[\"name\"] = \"Predicted North Region Price psm\";\n    this.eastPredData[\"name\"] = \"Predicted East Region Price psm\";\n    this.nePredData[\"name\"] = \"Predicted North-East Region Price psm\";\n    this.westPredData[\"name\"] = \"Predicted West Region Price psm\";\n    this.volumeData[\"name\"] = \"Volume\";\n    this.data = [this.pricepsmData, this.volumeData, this.meanPredData];\n\n    this.layout = {\n      showlegend: false,\n      dragmode: 'pan',\n      margin: {l:25, r:15, t:10, b:20},\n      width: this.width\n    };\n\n    this.configs = {\n      scrollZoom: false,\n      responsive: true,\n      displaylogo: false,\n      modeBarButtonsToRemove: ['select2d', 'lasso2d', 'zoom2d', 'resetScale2d']\n    }\n\n    Plotly.newPlot(this.plot_id, this.data, this.layout, this.configs);\n\n\n    this.count_dataArr = this.count_data.split(\"\\r\\n\").slice(1,6); \n    for (let i = 0; i < 5; i++){\n      this.count_dataArr[i] = this.count_dataArr[i].split(\",\");\n    }\n    this.count_dataArr = this.count_dataArr.sort(this.sort2Darray);\n    \n    this.countT_dataArr = this.countT_data.split(\"\\r\\n\").slice(1,17); \n    for (let i = 0; i < 16; i++){\n      this.countT_dataArr[i] = this.countT_dataArr[i].split(\",\");\n    }\n    this.countT_dataArr = this.countT_dataArr.sort(this.sort2Darray);\n\n    this.avg_dataArr = this.avg_data.split(\"\\r\\n\").slice(1,6); \n    for (let i = 0; i < 5; i++){\n      this.avg_dataArr[i] = this.avg_dataArr[i].split(\",\");\n      this.avg_dataArr[i][1] = this.avg_dataArr[i][1].slice(0,this.avg_dataArr[i][1].indexOf(\".\"));\n    }\n    this.avg_dataArr = this.avg_dataArr.sort(this.sort2Darray);\n\n    this.avgT_dataArr = this.avgT_data.split(\"\\r\\n\").slice(1,17); \n    for (let i = 0; i < 16; i++){\n      this.avgT_dataArr[i] = this.avgT_dataArr[i].split(\",\");\n      this.avgT_dataArr[i][1] = this.avgT_dataArr[i][1].slice(0,this.avgT_dataArr[i][1].indexOf(\".\"));\n    }\n    this.avgT_dataArr = this.avgT_dataArr.sort(this.sort2Darray);\n    \n    this.max_dataArr = this.max_data.split(\"\\r\\n\").slice(1,6); \n    for (let i = 0; i < 5; i++){\n      this.max_dataArr[i] = this.max_dataArr[i].split(\",\");\n      this.max_dataArr[i][1] = this.max_dataArr[i][1].slice(0,this.max_dataArr[i][1].indexOf(\".\"));\n    }\n    this.max_dataArr = this.max_dataArr.sort(this.sort2Darray);\n\n    this.maxT_dataArr = this.maxT_data.split(\"\\r\\n\").slice(1,17); \n    for (let i = 0; i < 16; i++){\n      this.maxT_dataArr[i] = this.maxT_dataArr[i].split(\",\");\n      this.maxT_dataArr[i][1] = this.maxT_dataArr[i][1].slice(0,this.maxT_dataArr[i][1].indexOf(\".\"));\n    }\n    this.maxT_dataArr = this.maxT_dataArr.sort(this.sort2Darray);\n\n    // console.log(this.count_data);\n    // console.log(this.avg_data);\n    // console.log(this.max_data);\n    // console.log(this.pricepsmData)\n  }\n\n  async countInfoClick() {\n    console.log(\"count info button clicked\");\n    const alert = await this.alertController.create({\n      header: 'Most Number of Units Sold',\n      subHeader: 'How is this calculated?',\n      message: 'All transactions over the last 6 months are grouped by their region/type, and the number of transactions for each region/type is totaled.',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  async trendsInfoClick(){\n    console.log(\"trends info button clicked\");\n    const alert = await this.alertController.create({\n      header: 'Price and Volume Trends',\n      subHeader: 'How is this calculated?',\n      message: 'All transactions are averaged by month, then the average price per square meter and volume of transactions each month are presented. \\n\\n Predictions are calculated using deep learning artificial intelligence.',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n  \n  async maxInfoClick(){\n    console.log(\"max info button clicked\");\n    const alert = await this.alertController.create({\n      header: 'Most Expensive Units',\n      subHeader: 'How is this calculated?',\n      message: 'All transactions over the last 6 months are grouped by their region/type, and the most expensive transaction by price per square meter is presented.',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  async avgLocInfoClick(){\n    console.log(\"avgLocInfoClick\");\n    const alert = await this.alertController.create({\n      header: 'Most Expensive Locations',\n      subHeader: 'How is this calculated?',\n      message: 'All transactions over the last 6 months are grouped by their region, and the mean for each region presented.',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  async avgTypeInfoClick(){\n    console.log(\"avgLocInfoClick\");\n    const alert = await this.alertController.create({\n      header: 'Most Expensive Property Types',\n      subHeader: 'How is this calculated?',\n      message: 'All transactions over the last 6 months are grouped by their type, and the mean for each type presented.',\n      buttons: ['OK'],\n    });\n\n    await alert.present();\n  }\n\n  private sort2Darray(a,b){\n    let a1 = Number(a[1]);\n    let b1 = Number(b[1]);\n    return b1-a1;\n  }\n\n  numLocButton(){\n    console.log(\"numLocButton\");\n    this.numLocHidden = !this.numLocHidden;\n  }\n  numTypeButton(){\n    console.log(\"numTypeButton\");\n    this.numTypeHidden = !this.numTypeHidden;\n  }\n  expLocButton(){\n    console.log(\"ExpLocButton\");\n    this.expLocHidden = !this.expLocHidden;\n  }\n  expTypeButton(){\n    console.log(\"ExpTypeButton\");\n    this.expTypeHidden = !this.expTypeHidden;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}